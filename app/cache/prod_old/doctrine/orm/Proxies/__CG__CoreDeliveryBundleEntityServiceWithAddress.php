<?php

namespace Proxies\__CG__\Core\DeliveryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ServiceWithAddress extends \Core\DeliveryBundle\Entity\ServiceWithAddress implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Core\\DeliveryBundle\\Entity\\ServiceWithAddress' . "\0" . 'addresses');
        }

        return array('__isInitialized__', '' . "\0" . 'Core\\DeliveryBundle\\Entity\\ServiceWithAddress' . "\0" . 'addresses');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ServiceWithAddress $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', array());

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddresses($addresses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddresses', array($addresses));

        return parent::setAddresses($addresses);
    }

    /**
     * {@inheritDoc}
     */
    public function addAddresse(\Core\DeliveryBundle\Entity\Address $address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddresse', array($address));

        return parent::addAddresse($address);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAddresse(\Core\DeliveryBundle\Entity\Address $address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAddresse', array($address));

        return parent::removeAddresse($address);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaptionRu($captionRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaptionRu', array($captionRu));

        return parent::setCaptionRu($captionRu);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptionRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptionRu', array());

        return parent::getCaptionRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getBuyerType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBuyerType', array());

        return parent::getBuyerType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBuyerType($buyerType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBuyerType', array($buyerType));

        return parent::setBuyerType($buyerType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinSum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinSum', array());

        return parent::getMinSum();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinSum($minSum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinSum', array($minSum));

        return parent::setMinSum($minSum);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxSum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxSum', array());

        return parent::getMaxSum();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxSum($maxSum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxSum', array($maxSum));

        return parent::setMaxSum($maxSum);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(\Core\DeliveryBundle\Entity\Company $company = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', array($company));

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', array());

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceType(\Core\DeliveryBundle\Entity\ServiceType $serviceType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceType', array($serviceType));

        return parent::setServiceType($serviceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceType', array());

        return parent::getServiceType();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryFrom', array());

        return parent::getDeliveryFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeliveryFrom($deliveryFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeliveryFrom', array($deliveryFrom));

        return parent::setDeliveryFrom($deliveryFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryTo', array());

        return parent::getDeliveryTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeliveryTo($deliveryTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeliveryTo', array($deliveryTo));

        return parent::setDeliveryTo($deliveryTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternalCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternalCode', array());

        return parent::getInternalCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternalCode($internalCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternalCode', array($internalCode));

        return parent::setInternalCode($internalCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsCashOnDelivery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsCashOnDelivery', array());

        return parent::getIsCashOnDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsCashOnDelivery($isCashOnDelivery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsCashOnDelivery', array($isCashOnDelivery));

        return parent::setIsCashOnDelivery($isCashOnDelivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsShowOnProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsShowOnProduct', array());

        return parent::getIsShowOnProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsShowOnProduct($isShowOnProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsShowOnProduct', array($isShowOnProduct));

        return parent::setIsShowOnProduct($isShowOnProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($position));

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', array());

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function getWaybills()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWaybills', array());

        return parent::getWaybills();
    }

    /**
     * {@inheritDoc}
     */
    public function setWaybills($waybills)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWaybills', array($waybills));

        return parent::setWaybills($waybills);
    }

    /**
     * {@inheritDoc}
     */
    public function addWaybill(\Core\OrderBundle\Entity\Waybills $waybill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addWaybill', array($waybill));

        return parent::addWaybill($waybill);
    }

    /**
     * {@inheritDoc}
     */
    public function removeWaybill($waybill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeWaybill', array($waybill));

        return parent::removeWaybill($waybill);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyName', array());

        return parent::getCompanyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getInstanceName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstanceName', array());

        return parent::getInstanceName();
    }

    /**
     * {@inheritDoc}
     */
    public function isValid(\Symfony\Component\Validator\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValid', array($context));

        return parent::isValid($context);
    }

}
