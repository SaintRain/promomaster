<?php

namespace Proxies\__CG__\Core\FaqBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Article extends \Core\FaqBundle\Entity\Article implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'slug', 'isActive', 'isPredifinedAnswer', 'isOnMain', 'goodRate', 'badRate', 'category', '' . "\0" . 'Core\\FaqBundle\\Entity\\Article' . "\0" . 'createdDatetime', '' . "\0" . 'Core\\FaqBundle\\Entity\\Article' . "\0" . 'updatedDatetime', 'captionRu', 'captionEn', 'titleRu', 'titleEn', 'bodyRu', 'bodyEn', 'metakeywordsRu', 'metakeywordsEn', 'metadescriptionRu', 'metadescriptionEn');
        }

        return array('__isInitialized__', 'id', 'slug', 'isActive', 'isPredifinedAnswer', 'isOnMain', 'goodRate', 'badRate', 'category', '' . "\0" . 'Core\\FaqBundle\\Entity\\Article' . "\0" . 'createdDatetime', '' . "\0" . 'Core\\FaqBundle\\Entity\\Article' . "\0" . 'updatedDatetime', 'captionRu', 'captionEn', 'titleRu', 'titleEn', 'bodyRu', 'bodyEn', 'metakeywordsRu', 'metakeywordsEn', 'metadescriptionRu', 'metadescriptionEn');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Article $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOnMain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOnMain', array());

        return parent::getIsOnMain();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOnMain($isOnMain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOnMain', array($isOnMain));

        return parent::setIsOnMain($isOnMain);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($isActive));

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDatetime', array());

        return parent::getCreatedDatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedDatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedDatetime', array());

        return parent::getUpdatedDatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function getGoodRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoodRate', array());

        return parent::getGoodRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoodRate($goodRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoodRate', array($goodRate));

        return parent::setGoodRate($goodRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getBadRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBadRate', array());

        return parent::getBadRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBadRate($badRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBadRate', array($badRate));

        return parent::setBadRate($badRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\Core\CategoryBundle\Entity\FaqCategory $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPredifinedAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPredifinedAnswer', array());

        return parent::getIsPredifinedAnswer();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPredifinedAnswer($isPredifinedAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPredifinedAnswer', array($isPredifinedAnswer));

        return parent::setIsPredifinedAnswer($isPredifinedAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', array());

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompressed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompressed', array());

        return parent::getCompressed();
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptionRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptionRu', array());

        return parent::getCaptionRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptionEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptionEn', array());

        return parent::getCaptionEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaptionRu($captionRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaptionRu', array($captionRu));

        return parent::setCaptionRu($captionRu);
    }

    /**
     * {@inheritDoc}
     */
    public function setCaptionEn($captionEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaptionEn', array($captionEn));

        return parent::setCaptionEn($captionEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleRu', array());

        return parent::getTitleRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleEn', array());

        return parent::getTitleEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleRu($titleRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleRu', array($titleRu));

        return parent::setTitleRu($titleRu);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleEn($titleEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleEn', array($titleEn));

        return parent::setTitleEn($titleEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getBodyRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBodyRu', array());

        return parent::getBodyRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getBodyEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBodyEn', array());

        return parent::getBodyEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setBodyRu($bodyRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBodyRu', array($bodyRu));

        return parent::setBodyRu($bodyRu);
    }

    /**
     * {@inheritDoc}
     */
    public function setBodyEn($bodyEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBodyEn', array($bodyEn));

        return parent::setBodyEn($bodyEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetakeywordsRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetakeywordsRu', array());

        return parent::getMetakeywordsRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetakeywordsEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetakeywordsEn', array());

        return parent::getMetakeywordsEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetakeywordsRu($metakeywordsRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetakeywordsRu', array($metakeywordsRu));

        return parent::setMetakeywordsRu($metakeywordsRu);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetakeywordsEn($metakeywordsEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetakeywordsEn', array($metakeywordsEn));

        return parent::setMetakeywordsEn($metakeywordsEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadescriptionRu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadescriptionRu', array());

        return parent::getMetadescriptionRu();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadescriptionEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadescriptionEn', array());

        return parent::getMetadescriptionEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadescriptionRu($metadescriptionRu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadescriptionRu', array($metadescriptionRu));

        return parent::setMetadescriptionRu($metadescriptionRu);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadescriptionEn($metadescriptionEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadescriptionEn', array($metadescriptionEn));

        return parent::setMetadescriptionEn($metadescriptionEn);
    }

}
