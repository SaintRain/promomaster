<?php

namespace Proxies\__CG__\Core\ReviewBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Review extends \Core\ReviewBundle\Entity\Review implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'id', 'lft', 'lvl', 'rgt', 'root', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'isEnabled', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'review', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'rating', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'createdAt', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'updatedAt', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'product', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'user', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'likes', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'photos', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'children', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'parent', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'pros', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'cons', 'remoteVideos');
        }

        return array('__isInitialized__', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'id', 'lft', 'lvl', 'rgt', 'root', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'isEnabled', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'review', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'rating', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'createdAt', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'updatedAt', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'product', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'user', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'likes', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'photos', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'children', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'parent', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'pros', '' . "\0" . 'Core\\ReviewBundle\\Entity\\Review' . "\0" . 'cons', 'remoteVideos');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Review $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLft', array());

        return parent::getLft();
    }

    /**
     * {@inheritDoc}
     */
    public function getLvl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLvl', array());

        return parent::getLvl();
    }

    /**
     * {@inheritDoc}
     */
    public function getRgt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRgt', array());

        return parent::getRgt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoot', array());

        return parent::getRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function setLft($lft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLft', array($lft));

        return parent::setLft($lft);
    }

    /**
     * {@inheritDoc}
     */
    public function setLvl($lvl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLvl', array($lvl));

        return parent::setLvl($lvl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRgt($rgt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRgt', array($rgt));

        return parent::setRgt($rgt);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoot($root)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoot', array($root));

        return parent::setRoot($root);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', array());

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', array($isEnabled));

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReview', array());

        return parent::getReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setReview($review)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReview', array($review));

        return parent::setReview($review);
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', array());

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', array($rating));

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikes', array());

        return parent::getLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLikes($likes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLikes', array($likes));

        return parent::setLikes($likes);
    }

    /**
     * {@inheritDoc}
     */
    public function addLike($likes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLike', array($likes));

        return parent::addLike($likes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLike($likes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLike', array($likes));

        return parent::removeLike($likes);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', array());

        return parent::getPhotos();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotos($photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotos', array($photos));

        return parent::setPhotos($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function addPhotos($photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhotos', array($photos));

        return parent::addPhotos($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhotos($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhotos', array($photo));

        return parent::removePhotos($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function addChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildren', array($children));

        return parent::addChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildren', array($children));

        return parent::removeChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPros()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPros', array());

        return parent::getPros();
    }

    /**
     * {@inheritDoc}
     */
    public function setPros($pros)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPros', array($pros));

        return parent::setPros($pros);
    }

    /**
     * {@inheritDoc}
     */
    public function getCons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCons', array());

        return parent::getCons();
    }

    /**
     * {@inheritDoc}
     */
    public function setCons($cons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCons', array($cons));

        return parent::setCons($cons);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteVideos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteVideos', array());

        return parent::getRemoteVideos();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoteVideos($remoteVideos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoteVideos', array($remoteVideos));

        return parent::setRemoteVideos($remoteVideos);
    }

    /**
     * {@inheritDoc}
     */
    public function addRemoteVideo($remoteVideo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRemoteVideo', array($remoteVideo));

        return parent::addRemoteVideo($remoteVideo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRemoteVideo($remoteVideo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRemoteVideo', array($remoteVideo));

        return parent::removeRemoteVideo($remoteVideo);
    }

}
