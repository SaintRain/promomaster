<?php

namespace Proxies\__CG__\Application\Sonata\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CommonContragent extends \Application\Sonata\UserBundle\Entity\CommonContragent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'city', 'createdDateTime', 'updatedDateTime', 'user', 'phone1', 'phone2', 'phone3', 'contactEmail', 'payments', 'manufacturerDiscounts', '' . "\0" . 'Application\\Sonata\\UserBundle\\Entity\\CommonContragent' . "\0" . 'orders');
        }

        return array('__isInitialized__', 'id', 'city', 'createdDateTime', 'updatedDateTime', 'user', 'phone1', 'phone2', 'phone3', 'contactEmail', 'payments', 'manufacturerDiscounts', '' . "\0" . 'Application\\Sonata\\UserBundle\\Entity\\CommonContragent' . "\0" . 'orders');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CommonContragent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(\Core\DirectoryBundle\Entity\City $city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone1($phone1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone1', array($phone1));

        return parent::setPhone1($phone1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone1', array());

        return parent::getPhone1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone2($phone2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone2', array($phone2));

        return parent::setPhone2($phone2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone2', array());

        return parent::getPhone2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone3($phone3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone3', array($phone3));

        return parent::setPhone3($phone3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone3', array());

        return parent::getPhone3();
    }

    /**
     * {@inheritDoc}
     */
    public function getContactEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactEmail', array());

        return parent::getContactEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactEmail($contactEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactEmail', array($contactEmail));

        return parent::setContactEmail($contactEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDateTime', array());

        return parent::getCreatedDateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedDateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedDateTime', array());

        return parent::getUpdatedDateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', array());

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', array());

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayments($payments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayments', array($payments));

        return parent::setPayments($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayments', array());

        return parent::getPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function addPayment($payment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPayment', array($payment));

        return parent::addPayment($payment);
    }

    /**
     * {@inheritDoc}
     */
    public function removePayment($payment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePayment', array($payment));

        return parent::removePayment($payment);
    }

    /**
     * {@inheritDoc}
     */
    public function getManufacturerDiscounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManufacturerDiscounts', array());

        return parent::getManufacturerDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setManufacturerDiscounts($manufacturerDiscounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManufacturerDiscounts', array($manufacturerDiscounts));

        return parent::setManufacturerDiscounts($manufacturerDiscounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrders', array());

        return parent::getOrders();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrders($orders)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrders', array($orders));

        return parent::setOrders($orders);
    }

    /**
     * {@inheritDoc}
     */
    public function isValid(\Symfony\Component\Validator\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValid', array($context));

        return parent::isValid($context);
    }

}
