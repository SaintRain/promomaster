<?php

namespace Proxies\__CG__\Core\OrderBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Composition extends \Core\OrderBundle\Entity\Composition implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'product', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'booking', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'order', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'price', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'quantity', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'ndsSum', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'cost', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'discountValue', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'isDiscountValueInPercent', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'units', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'indexPosition', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'defaultSupplier');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'product', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'booking', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'order', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'price', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'quantity', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'ndsSum', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'cost', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'discountValue', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'isDiscountValueInPercent', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'units', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'indexPosition', '' . "\0" . 'Core\\OrderBundle\\Entity\\Composition' . "\0" . 'defaultSupplier');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Composition $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooking', array());

        return parent::getBooking();
    }

    /**
     * {@inheritDoc}
     */
    public function setBooking($booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBooking', array($booking));

        return parent::setBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function addBooking($booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBooking', array($booking));

        return parent::addBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBooking($booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBooking', array($booking));

        return parent::removeBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function addUnit($unit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUnit', array($unit));

        return parent::addUnit($unit);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUnit($unit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUnit', array($unit));

        return parent::removeUnit($unit);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', array());

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', array($order));

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getNdsSum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNdsSum', array());

        return parent::getNdsSum();
    }

    /**
     * {@inheritDoc}
     */
    public function setNdsSum($ndsSum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNdsSum', array($ndsSum));

        return parent::setNdsSum($ndsSum);
    }

    /**
     * {@inheritDoc}
     */
    public function getCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCost', array());

        return parent::getCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setCost($cost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCost', array($cost));

        return parent::setCost($cost);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountValue', array());

        return parent::getDiscountValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountValue($discountValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountValue', array($discountValue));

        return parent::setDiscountValue($discountValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDiscountValueInPercent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDiscountValueInPercent', array());

        return parent::getIsDiscountValueInPercent();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDiscountValueInPercent($isDiscountValueInPercent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDiscountValueInPercent', array($isDiscountValueInPercent));

        return parent::setIsDiscountValueInPercent($isDiscountValueInPercent);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnits', array());

        return parent::getUnits();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnits($units)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnits', array($units));

        return parent::setUnits($units);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndexPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndexPosition', array());

        return parent::getIndexPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndexPosition($indexPosition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndexPosition', array($indexPosition));

        return parent::setIndexPosition($indexPosition);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultSupplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultSupplier', array());

        return parent::getDefaultSupplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSupplier($defaultSupplier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSupplier', array($defaultSupplier));

        return parent::setDefaultSupplier($defaultSupplier);
    }

    /**
     * {@inheritDoc}
     */
    public function toCompareArray($fields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toCompareArray', array($fields));

        return parent::toCompareArray($fields);
    }

}
