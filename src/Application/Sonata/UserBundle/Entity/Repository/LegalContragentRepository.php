<?php

/**
 * Репозиторий для работы с сущностью LegalContragent
 *
 * @author  Sergeev A.M.
 * @copyright LLC "PromoMaster"
 */

namespace Application\Sonata\UserBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LegalContragentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LegalContragentRepository extends EntityRepository
{
    /**
     * Контрагент со всеми адресатами
     * @param int $id
     * @return type
     */
    public function findWithContact($id)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('c, contact, city')
           ->leftJoin('c.contactList', 'contact')
           ->leftJoin('contact.city', 'city')
           ->leftJoin('city.country', 'country')
           ->where('c.id = :id')
        ;
        $qb->setParameter('id', $id);

        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }

    /**
     * Поиск контрагент по ФИО
     * @param array $organization - название организации
     * @param integer $userId - id пользователя
     * @return type
     */
    public function findByFullName($organization, $userId)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('c, contactList')
            ->join('c.user', 'user')
            ->leftJoin('c.contactList', 'contactList')
            ->where('user.id = :userId')
            ->andWhere('c.organization = :organization')
        ;
        
        $qb->setParameter('userId', $userId)
           ->setParameter('organization', $organization)
        ;

        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }

    /**
     * Контрагент с контактом (только необходимые поля)
     * @param type $id
     * @return type
     */
    public function findOnePartialWithContact($id)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('partial c.{id, contactEmail, phone1, organization}, '
            . 'partial contact.{id, address}, partial city.{id, name}')
           ->leftJoin('c.contactList', 'contact')
           ->leftJoin('contact.city', 'city')
           //->leftJoin('city.country', 'country')
           ->where('c.id = :id')
        ;
        $qb->setParameter('id', $id);

        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }
}
