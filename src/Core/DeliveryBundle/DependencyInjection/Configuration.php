<?php

namespace Core\DeliveryBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 */
class Configuration implements ConfigurationInterface
{

    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('core_delivery');
        
        $this->addCdekSection($rootNode);
        $this->addDpdSection($rootNode);
        $this->addPekSection($rootNode);
        $this->addDellinSection($rootNode);
        $this->addPostRuSection($rootNode);
        $this->addEmsSection($rootNode);
        $this->addEnergySection($rootNode);
        $this->addJelDorSection($rootNode);

        return $treeBuilder;
    }

    /**
     * Настройки СДЭК
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addCdekSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('cdek')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                           ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/pvzlist.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getAffiliates')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/pvzlist.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://api.edostavka.ru/calculator/calculate_price_by_json_request.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/status_report_h.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getInvoice')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/orders_print.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('createOrder')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/new_orders.php')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('cancelOrder')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://gw.edostavka.ru:11443/delete_orders.php')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // дополнительные услуги
                        ->arrayNode('ExtraServices')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('fitting_home')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('30')->end()
                                        ->scalarNode('name')->defaultValue('Примерка на дому')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('npp')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('НПП')->end()
                                        ->scalarNode('name')->defaultValue('Наложенный платеж')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('partial_delivery')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('36')->end()
                                        ->scalarNode('name')->defaultValue('Частичная доставка')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('delivery_day_off')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('3')->end()
                                        ->scalarNode('name')->defaultValue('Доставка в выходной день')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('fence_in_the_sender')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('16')->end()
                                        ->scalarNode('name')->defaultValue('Забор в городе отправителя')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('delivery_in_recipient')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('17')->end()
                                        ->scalarNode('name')->defaultValue('Доставка в городе получателя')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('inspection_attachments')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('37')->end()
                                        ->scalarNode('name')->defaultValue('Осмотр вложения')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('insurance')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('2')->end()
                                        ->scalarNode('name')->defaultValue('Страхование')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // системные имена внутри компании
                        ->arrayNode('InternalCodes')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('express_light_door_door')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('1')->end()
                                        ->scalarNode('name')->defaultValue('Экспресс лайт дверь-дверь')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(1)->end()
                                        //->scalarNode('group')->defaultValue('Экспресс лайт')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('express_light_terminal_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('10')->end()
                                        ->scalarNode('name')->defaultValue('Экспресс лайт склад-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(4)->end()
                                        //->scalarNode('group')->defaultValue('Экспресс лайт')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('express_light_terminal_door')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('11')->end()
                                        ->scalarNode('name')->defaultValue('Экспресс лайт склад-дверь')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(3)->end()
                                        //->scalarNode('group')->defaultValue('Экспресс лайт')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('express_light_door_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('12')->end()
                                        ->scalarNode('name')->defaultValue('Экспресс лайт дверь-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(2)->end()
                                        //->scalarNode('group')->defaultValue('Экспресс лайт')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('package_terminal_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('136')->end()
                                        ->scalarNode('name')->defaultValue('Посылка склад-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(4)->end()
                                        //->scalarNode('group')->defaultValue('Посылка')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('package_terminal_door')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('137')->end()
                                        ->scalarNode('name')->defaultValue('Посылка склад-дверь')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(3)->end()
                                        //->scalarNode('group')->defaultValue('Посылка')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('package_door_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('138')->end()
                                        ->scalarNode('name')->defaultValue('Посылка дверь-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(2)->end()
                                        //->scalarNode('group')->defaultValue('Посылка')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('econom_express_teminal_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('5')->end()
                                        ->scalarNode('name')->defaultValue('Экономичный экспресс склад-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(4)->end()
                                        //->scalarNode('group')->defaultValue('Экономичный экспресс')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('magistral_express_teminal_terminal')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('62')->end()
                                        ->scalarNode('name')->defaultValue('Магистральный экспресс склад-склад')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                        ->integerNode('modeId')->defaultValue(4)->end()
                                        //->scalarNode('group')->defaultValue('Магистральный экспресс')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки DPD
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addDpdSection(ArrayNodeDefinition $node)
    {
        //ws = wstest
        $node
            ->children()
                ->arrayNode('dpd')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://ws.dpd.ru/services/geography?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getCitiesCashPay')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getAffiliates')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://ws.dpd.ru/services/geography?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getTerminalsSelfDelivery2')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://ws.dpd.ru/services/calculator2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getServiceCost')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://ws.dpd.ru/services/tracing1-1?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getStatesByDPDOrder')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getSticker')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://ws.dpd.ru/services/label-print?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('createLabelFile')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getInvoice')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://wstest.dpd.ru/services/order2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getInvoiceFile')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('createOrder')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://wstest.dpd.ru/services/order2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('createOrder')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('cancelOrder')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://wstest.dpd.ru/services/order2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('cancelOrder')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getOrderStatus')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://wstest.dpd.ru/services/order2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getOrderStatus')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('getOrderStatus')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://wstest.dpd.ru/services/order2?wsdl')->end()
                                        ->scalarNode('method')->defaultValue('getOrderStatus')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        //http://www.dpd.ru/docs/dogovor/tk-consumer.pdf
                        ->arrayNode('ExtraServices')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('sms')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('SMS')->end()
                                        ->scalarNode('name')->defaultValue('SMS уведомление получателя')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('eml')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('EML')->end()
                                        ->scalarNode('name')->defaultValue('E-mail уведомление получателя')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('esd')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ЭСД')->end()
                                        ->scalarNode('name')->defaultValue('Электронное сообщение о доставке груза получателю')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('esz')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ЭСЗ')->end()
                                        ->scalarNode('name')->defaultValue('Электронное сообщение о приёме заказа')->end()
                                        ->scalarNode('cost')->defaultValue('0')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('vdo')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ВДО')->end()
                                        ->scalarNode('name')->defaultValue('Возврат документов отправителю.')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('dvd')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ДВД')->end()
                                        ->scalarNode('name')->defaultValue('Доставка в выходные дни')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('npp')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('НПП')->end()
                                        ->scalarNode('name')->defaultValue('Наложенный платеж')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('pod')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ПОД')->end()
                                        ->scalarNode('name')->defaultValue('Подтверждение о доставке')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('pdp')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ПРД')->end()
                                        ->scalarNode('name')->defaultValue('Погрузо-разгрузочные работы при доставке.')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                
                                ->arrayNode('oc')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ОЦ')->end()
                                        ->scalarNode('name')->defaultValue('Объявленная ценность отправки')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trm')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ТРМ')->end()
                                        ->scalarNode('name')->defaultValue('Температурный режим')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('ojd')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ОЖД')->end()
                                        ->scalarNode('name')->defaultValue('Ожидание на адресе')->end()
                                        ->scalarNode('cost')->defaultValue('1')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // системные имена внутри компании
                        ->arrayNode('InternalCodes')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('dpd_ten')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('TEN')->end()
                                        ->scalarNode('name')->defaultValue('DPD 10:00')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_dpt')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('DPT')->end()
                                        ->scalarNode('name')->defaultValue('DPD 13:00')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_bzp')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('BZP')->end()
                                        ->scalarNode('name')->defaultValue('DPD 18:00')->end()
                                        ->booleanNode('isActive')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_express')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('NDY')->end()
                                        ->scalarNode('name')->defaultValue('DPD EXPRESS')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_express')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('CUR')->end()
                                        ->scalarNode('name')->defaultValue('DPD CLASSIC domestic')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_economy')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('ECN')->end()
                                        ->scalarNode('name')->defaultValue('DPD ECONOMY')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_consumer')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('CSM')->end()
                                        ->scalarNode('name')->defaultValue('DPD Consumer')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->children()
                                ->arrayNode('dpd_classic_parcel')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('id')->defaultValue('PCL')->end()
                                        ->scalarNode('name')->defaultValue('DPD CLASSIC Parcel')->end()
                                        ->booleanNode('isActive')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки ПЭК
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addPekSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('pek')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://pecom.ru/ru/calc/towns.php')->end()
                                        ->booleanNode('api')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://pecom.ru/bitrix/components/pecom/calc/ajax.php')->end()
                                        ->booleanNode('api')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('https://kabinet.pecom.ru/api/v1/cargos/basicstatus/')->end()
                                        ->booleanNode('api')->defaultValue(true)->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        ->arrayNode('deliveryInfo')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('pek_default')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('name')->defaultValue('ПЭК')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }


     /**
     * Настройки Деловые линии
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addDellinSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('dellin')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://public.services.dellin.ru/calculatorService2/index.html?request=xmlForm')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://public.services.dellin.ru/calculatorService2/index.html?request=xmlResult')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://public.services.dellin.ru/tracker/XML/')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        ->arrayNode('deliveryInfo')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('dellin_default')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('name')->defaultValue('Деловые линии')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки Почта России
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addPostRuSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('postRu')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://pecom.ru/ru/calc/towns.php')->end()
                                        ->booleanNode('soap')->defaultValue(false)->end()
                                        ->scalarNode('method')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://api.postcalc.ru/')->end()
                                        ->booleanNode('soap')->defaultValue(false)->end()
                                        ->scalarNode('method')->defaultValue(false)->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://voh.russianpost.ru:8080/niips-operationhistory-web/OperationHistory?wsdl')->end()
                                        ->booleanNode('soap')->defaultValue(true)->end()
                                        ->scalarNode('method')->defaultValue('GetOperationHistory')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        ->arrayNode('deliveryInfo')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('post_ru_default')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('name')->defaultValue('Почта России')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки Почта России EMS
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addEmsSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('ems')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://emspost.ru/api/rest/?method=ems.get.locations')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://emspost.ru/api/rest/?method=ems.calculate')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        ->arrayNode('deliveryInfo')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('ems_default')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('name')->defaultValue('EMS Почта России')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки ТК Энергия
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addEnergySection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('energy')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://api.nrg-tk.ru/api/rest/?method=nrg.get.locations')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://api.nrg-tk.ru/api/rest/?method=nrg.calculate')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://api.nrg-tk.ru/api/rest/?method=nrg.get_sending_state')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        // опции касающиеся настроек конкретного типа доставки
                        // имена совпадают с именем в базе
                        ->arrayNode('deliveryInfo')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('energy_default')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('name')->defaultValue('Энергия')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }

    /**
     * Настройки ТК «ЖелДорЭкспедиция»
     * @param \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition $node
     */
    private function addJelDorSection(ArrayNodeDefinition $node)
    {
        $node
            ->children()
                ->arrayNode('jelDor')
                        ->addDefaultsIfNotSet()
                        ->canBeUnset()
                        ->children()
                        // глобальные опции
                        ->arrayNode('options')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('getCities')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://www.jde.ru/branch')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('calculate')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://www.jde.ru/form/calc/simple')->end()
                                    ->end()
                                ->end()
                                ->arrayNode('trackPackage')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('uri')->defaultValue('http://cabinet.jde.ru/')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();
    }
}
