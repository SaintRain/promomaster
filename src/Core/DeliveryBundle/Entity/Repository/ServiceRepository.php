<?php

/**
 * Репозиторий, содержащий общие запросы для работы с сущностью Service
 * @author  Kaluzhny.N.I.
 * @copyright LLC "PromoMaster"
 */

namespace Core\DeliveryBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ServiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceRepository extends EntityRepository
{
    /**
     *
     * @param sting|int $field - id или системное имя
     * @return object
     */
    public function findWithCompany($field) {
        $qb = $this->createQueryBuilder('s');
        $qb->select('s, c')
            ->leftJoin('s.company', 'c')
        ;
        if (is_int($field)) {
            $qb->where('s.id = :field');
        } else {
            $qb->where('s.name = :field');
        }
        $qb->setParameter(':field', $field);
        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;
    }

    /**
     * Поиск доставок со всеми данными
     * @param array $params данные для поиска
     * @return type
     */
    public function findWithAllData($params = null) {
        $qb = $this->createQueryBuilder('s');
        $qb->select('s, c, t, s2')
        ->leftJoin('s.company','c')
        ->leftJoin('c.services','s2')
        ->leftJoin('s.serviceType', 't');

        if ($params) {            
            $i = 0;
            $setters = [];
            foreach ($params as $key => $param) {
                $setters[$key] = $param['data'];
                if (is_string($param['data'])) {
                    $where = '(s.'. $key .' IS NULL OR s.'. $key . ' ' . $param['condition'] . ' :' . $key . ')';
                    $where .= 'AND (s2.'. $key .' IS NULL OR s2.'. $key . ' ' . $param['condition'] . ' :' . $key . ')';
                } else {
                    $where = '(s.'. $key .'= 0 OR s.'. $key . ' ' . $param['condition'] . ' :' . $key . ')';
                    $where .= 'AND (s2.'. $key .'= 0 OR s2.'. $key . ' ' . $param['condition'] . ' :' . $key . ')';
                }
                if ($i == 0) {
                    $qb->where($where)->setParameter(':' . $key, $param['data']);
                } else {
                    $qb->andWhere($where)->setParameter(':' . $key, $param['data']);
                }
                $i++;
            }
            $qb->orderBy('t.id, c.id, s.id');
        }
        
        $result = $qb->getQuery()->getResult();
        
        return $result;
    }
}
