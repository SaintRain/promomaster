<?php

/**
 * Репозиторий, содержащий общие запросы для работы с сущностью Company
 * @author  Kaluzhny.N.I.
 * @copyright LLC "PromoMaster"
 */

namespace Core\DeliveryBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CompanyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompanyRepository extends EntityRepository
{
    public function findAllWithServices() {
        $qb = $this->createQueryBuilder('c');
        $qb->select('c, s')
           ->leftJoin('c.services', 's')
           ;
        $result = $qb->getQuery()->getResult();

        return $result;
    }

    /**
     * Поиск доставок которые показывать на транице продукта
     * @param boolean $isShowOnProduct - показывать на транице продукта
     * @return type
     */
    public function findForProductPage($isShowOnProduct = true)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('c, s')
            ->innerJoin('c.services','s')
            ->where('s.isShowOnProduct = :isShowOnProduct')
            ->orderBy('c.position', 'ASC')
        ;

        $qb->setParameter('isShowOnProduct', $isShowOnProduct);

        $result = $qb->getQuery()->getResult();

        return $result;
    }

    public function findForFragments($status = true, $isInFooter = true)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('partial c.{id, name, captionRu}')
            ->where('c.isInFooter = :isInFooter')
            ->andWhere('c.status = :status')
            ->orderBy('c.position', 'ASC')
        ;

        $qb->setParameter('isInFooter', $isInFooter)
            ->setParameter('status', $status);

        $result = $qb->getQuery()->getResult();

        return $result;
    }
}
