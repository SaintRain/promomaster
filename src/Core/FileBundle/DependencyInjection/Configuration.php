<?php

/**
 * Конфигурации для бандла
 *
 * @author Sergeev A.M.
 * @copyright LLC "PromoMaster"
 */

namespace Core\FileBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 */
class Configuration implements ConfigurationInterface {
    /**
     * {@inheritDoc}
     */
    public function getConfigTreeBuilder() {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('core_file', 'array');

        $rootNode
            ->children()
                ->scalarNode('root_dir')
                    ->isRequired()
                    ->cannotBeEmpty()
                ->end()
                ->scalarNode('temp_dir')
                    ->isRequired()
                    ->cannotBeEmpty()
                    ->defaultValue('app/cache/dev')
                ->end()
                ->scalarNode('web_dir')
                    ->isRequired()
                    ->cannotBeEmpty()
                    ->defaultValue('web')
                ->end()
                ->scalarNode('upload_dir')
                    ->isRequired()
                    ->cannotBeEmpty()
                    ->defaultValue('uploads')
                ->end()
                ->scalarNode('no_image_src')
                    ->defaultValue('images/no-image.gif')
                ->end()
                ->booleanNode('detect_dominant_color')
                    ->defaultFalse()
                ->end()
                ->booleanNode('thumbnail_crop')
                    ->defaultTrue()
                ->end()
                ->scalarNode('thumbnail_backgrond_color')
                    ->defaultValue('#fff')
                ->end()
                ->arrayNode('image')
                    ->useAttributeAsKey('name')
                    ->prototype('array')
                        ->useAttributeAsKey('name')
                        ->prototype('array')
                            ->children()
                                ->arrayNode('watermark')
                                    ->children()
                                        ->booleanNode('enable')
                                            ->defaultFalse()
                                        ->end()
                                        ->scalarNode('url')
                                            ->defaultValue('/images/watertmark.png')
                                        ->end()
                                        ->scalarNode('top')
                                            ->defaultValue(100)
                                            ->beforeNormalization()
                                                ->ifString()
                                                ->then(function($val) { return (int)str_replace('%', '', $val); })
                                            ->end()
                                        ->end()
                                        ->scalarNode('left')
                                            ->defaultValue(100)
                                            ->beforeNormalization()
                                                ->ifString()
                                                ->then(function($val) { return (int)str_replace('%', '', $val); })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                                ->scalarNode('dir')
                                    ->isRequired()
                                    ->cannotBeEmpty()
                                ->end()
                                ->integerNode('file_size')
                                    ->defaultValue(50)
                                ->end()
                                ->integerNode('max_count_files')
                                    ->defaultValue(100)
                                ->end()
                                ->scalarNode('prefix_preview_in_admin')
                                    ->defaultValue('64x64_')
                                ->end()
                                ->arrayNode('mime_types')
                                    ->defaultValue(['image/*'])
                                    ->prototype('scalar')
                                    ->end()
                                ->end()
                                ->arrayNode('options')
                                    ->useAttributeAsKey('name')
                                    ->prototype('array')
                                        ->useAttributeAsKey('name')
                                        ->prototype('variable')->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->arrayNode('flash')
            ->useAttributeAsKey('name')
            ->prototype('array')
            ->useAttributeAsKey('name')
            ->prototype('array')
            ->children()
            ->scalarNode('dir')
            ->isRequired()
            ->cannotBeEmpty()
            ->end()
            ->integerNode('file_size')
            ->defaultValue(50)
            ->end()
            ->integerNode('max_count_files')
            ->defaultValue(100)
            ->end()
            ->arrayNode('mime_types')
            ->defaultValue(['application/x-shockwave-flash'])
            ->prototype('scalar')
            ->end()
            ->end()
            ->end()
            ->end()
            ->end()
            ->end()
                ->arrayNode('document')
                    ->useAttributeAsKey('name')
                    ->prototype('array')
                        ->useAttributeAsKey('name')
                        ->prototype('array')
                            ->children()
                                ->scalarNode('dir')
                                    ->isRequired()
                                    ->cannotBeEmpty()
                                ->end()
                                ->integerNode('file_size')
                                    ->defaultValue(50)
                                ->end()
                                ->integerNode('max_count_files')
                                    ->defaultValue(100)
                                ->end()
                                ->arrayNode('mime_types')
                                    ->defaultValue(['application/*'])
                                    ->prototype('scalar')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
        ;

        return $treeBuilder;
    }
}
