{% block product_modifications_widget %}
{# основная модификация #}
        {%set general= attribute(sonata_admin.admin.subject, mappedBy).general %}
        {%if general.id is defined%}
            {%set general_id=general.id%}
        {%else%}
            {%set general_id=0%}
        {%endif%}

{# имя поля индекса сортировки#}
{%if sonata_admin.field_description.options.sortable is defined %}
{%set sortable=sonata_admin.field_description.options.sortable%}
{%else%}
{%set sortable=""%}
{%endif%}

{# данные для галочек, чтобы не пропали, когда форма ломается#}
{%if app.request.get(sonata_admin.admin.uniqid)[name] is defined %}
    {%set dInfo=app.request.get(sonata_admin.admin.uniqid)[name]%}
    {%set unions=getModificationDataList(form.vars.data, dInfo, options.class)%}
{%else%}
    {%set dInfo=false%}
{%set unions=form.vars.data%}
{%endif%}


{% spaceless %}
<script src="{{ asset('bundles/coreproduct/Admin/js/product_modifications_widget.js')}}" type="text/javascript"></script>
<script>
            var {{id}}_options = {
    options: {
    field_name: "{{name}}",
            field_id: "{{id}}",
            subject_id: "{{sonata_admin.admin.subject.id}}",
            mappedBy: "{{mappedBy}}",
            targetEntity: "{{targetEntity|url_encode}}",
            uniqid: "{{sonata_admin.admin.uniqid}}",
            options: {
    class: "{{options.class|url_encode}}",
            deleteable: "{{form.vars.options.deleteable}}",
            hideSubjectInList: "{{form.vars.options.hideSubjectInList}}",
            setThisToTargetObject: "{{form.vars.options.setThisToTargetObject}}",
            columns:{{form.vars.options.columns|json_encode()|raw}},
            edit_route: "{{form.vars.options.edit_route}}",
            create_route: "{{form.vars.options.create_route}}",
            find_route: "{{form.vars.options.find_route}}"
    },
            sortable: "{{sortable}}"
    },
            set_record_to_union:"{{path('set_record_to_modification')}}",
            unset_record_from_union:"{{path('unset_record_from_modification')}}",
            data: {
        {%for d in unions%}
        {{d.id}}: {
    id:{{d.id}}
    },
        {%endfor%}
    }
    }

    jQuery(document).ready(function($) {

    //Выбрать запись как модификацию
    $('.{{id}}_UnionThisToGroupModificationSelect').click(function() {
    reloadModificationsDialogContainer('{{path(form.vars.options.find_route)}}', "{{id}}");
    });
            //Создать модификацию
            $('.{{id}}_UnionThisToGroupModificationAdd').click(function() {
    var newArticle = prompt("Пожалуйста, укажите новый артикул", $('#{{sonata_admin.admin.uniqid}}_article').val());
    
            if (newArticle !== null && newArticle!='' && newArticle!=$('#{{sonata_admin.admin.uniqid}}_article').val()) {
    var indexPosition = $('.{{id}}__delete').length + 1;
            //Даные для создания модификации
            var new_options ={{id}}_options.options;
            new_options.newArticle = newArticle;
            new_options.indexPosition = indexPosition;
                                        {{id}}_createModification(new_options);
                                            }
                                            });
                                                    /**
                                                     * Создание модификации
                                                     * @param {type} options
                                                     * @returns {undefined}
                                                     */
                                                            function {{id}}_createModification(data) {
                                                            $.post(
                                                                    "{{path (options.create_route)}}",
                                                                    data,
                                                                    function(res) {
                                                                    addUnionRows(res, "{{id}}");
                                                                    }
                                                            );
                                                            }
                                                    //отметить всё на удаление
                                                    $('body').on('change', '.select-all-{{name}}-delete', function() {
                                                    if ($(this).attr('checked')) {
                                                    $('.{{id}}__delete').attr('checked', $(this).attr('checked'));
                                                    }
                                                    else {
                                                    $('.{{id}}__delete').removeAttr('checked');
                                                    }
                                                    });
                                                            //отметить всё а открепление
                                                            $('body').on('change', '.select-all-{{name}}-undock', function() {
                                                    if ($(this).attr('checked')) {
                                                    $('.{{id}}__undock').attr('checked', $(this).attr('checked'));
                                                    }
                                                    else {
                                                    $('.{{id}}__undock').removeAttr('checked');
                                                    }
                                                    });
    {% if sortable %}
                                                    jQuery('div#field_container_{{ id }} tbody.sonata-ba-tbody').sortable({
                                                    axis: 'y',
                                                            opacity: 0.6,
                                                            items: 'tr.main-row-collection',
                                                            stop: apply_position_value_{{ id }}
                                                    });
                                                            function apply_position_value_{{ id }}() {
                                                            // update the input value position
                                                            jQuery('div#field_container_{{ id }} tbody.sonata-ba-tbody td.sonata-ba-td-{{ id }}-{{ sonata_admin.field_description.options.sortable }}').each(function(index, element) {

                                                            // remove the sortable handler and put it back
                                                            jQuery('span.sonata-ba-sortable-handler', element).remove();
                                                                    jQuery(element).append('<span class="sonata-ba-sortable-handler ui-icon ui-icon-grip-solid-horizontal"></span>');
                                                                    jQuery('input', element).hide();
                                                            });
                                                                    jQuery('div#field_container_{{ id }} tbody.sonata-ba-tbody td.sonata-ba-td-{{ id }}-{{ sonata_admin.field_description.options.sortable }} input').each(function(index, value) {
                                                            jQuery(value).val(index + 1);
                                                            });
                                                            }

                                                    // refresh the sortable option when a new element is added
                                                    jQuery('#sonata-ba-field-container-{{ id }}').bind('sonata.add_element', function() {
                                                    apply_position_value_{{ id }}();
                                                            jQuery('div#field_container_{{ id }} tbody.sonata-ba-tbody').sortable('refresh');
                                                    });
                                                            apply_position_value_{{ id }}();
                                                    });
    {% endif %}
    </script>

        {%if not sonata_admin.admin.subject.id %}
    Редактировать данное свойство можно только после создания записи
        {%else%}

    <div class="{%if  not sonata_admin.admin.subject.id %}hidden {%endif%}">

        <p><div class="btn-group"><input type="button" class="btn {{id}}_UnionThisToGroupModificationAdd" value="Создать модификацию">
            <input type="button" class="btn {{id}}_UnionThisToGroupModificationSelect" value="Выбрать"></div>
    </p>

    <div id="field_container_{{ id }}" class="field-container {% if not unions.count or  unions.count<2 %}hide{%endif%}">
                {{ include  ('CoreProductBundle::Admin/Form/modifications_widget/generate_table.html.twig',{dInfo:dInfo,general_id:general_id,subject_id:sonata_admin.admin.subject.id, mappedBy:mappedBy, field_id:id, field_name:name, data:unions, uniqid:sonata_admin.admin.uniqid,  options:form.vars.options,  sortable:sortable}) }}
        </div>
    </div>
        {%endif%}
    {% endspaceless %}
{% endblock %}